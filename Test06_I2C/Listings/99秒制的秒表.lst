C51 COMPILER V9.54   99__________                                                          01/18/2020 10:00:48 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 99__________
OBJECT MODULE PLACED IN .\Objects\99秒制的秒表.obj
COMPILER INVOKED BY: E:\Learning_syy\C51&STM32\Keil5\C51\BIN\C51.EXE 99秒制的秒表.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\99秒制的秒表.lst) TABS(2) OBJECT(.\Objects\99秒制的秒表.obj)

line level    source

   1          /*
   2          **********************************************************************************************************
             -*************************************
   3          *
   4          *   模块名称 ： E2PROM模块AT24C02
   5          *   文件名称 ： 90秒制的秒表.c
   6          *   版本     ： v1.0
   7          *   说明     ： 利用定时器产生一个0~99秒变化的秒表，显示在数码管上，并将变化写入AT24C02；
   8          *               当关闭实验板电源，并再次打开电源时，单片机先从AT24C02读取原来写入的数字，接着次数继续变化并显示在
             -数码管上
   9          *   修改记录 ：
  10          *       版本号     日期       作者      说明
  11          *       v1.0    2020-01-17  Yang      v1.0版本进行测试
  12          *       
  13          *
  14          **********************************************************************************************************
             -*************************************
  15          */
  16          
  17          #include <reg52.h>
  18          #define uchar unsigned char
  19          #define uint unsigned int
  20          
  21          bit  write=0;
  22          sbit SDA=P2^0;
  23          sbit SCL=P2^1;
  24          sbit dula=P2^6;
  25          sbit wela=P2^7;
  26          
  27          uchar second,count;//second：秒
  28          /*数码管数字表*/
  29          uchar code table[]={
  30          0x3f,0x06,0x5b,0x4f,
  31            0x66,0x6d,0x7d,0x07,
  32            0x7f,0x6f,0x77,0x7c,
  33            0x39,0x5e,0x79,0x71
  34          };
  35          
  36          /*硬件延时函数，延时4~5微秒*/
  37          void delay_us_hard()
  38          {;;}
  39          
  40          /*软件延时函数，延时n毫秒*/
  41          void delay_ms_soft(uint n)
  42          {
  43   1        uint i,j;
  44   1        for(i=n;i>0;i--)
  45   1          for(j=110;j>0;j--);
  46   1      }
  47          
  48          /*开始信号,SDA下降沿触发*/
  49          void I2C_start()
  50          {
  51   1        SDA=1;
C51 COMPILER V9.54   99__________                                                          01/18/2020 10:00:48 PAGE 2   

  52   1        delay_us_hard();
  53   1        SCL=1;
  54   1        delay_us_hard();
  55   1        SDA=0;
  56   1        delay_us_hard();
  57   1      }
  58          
  59          /*停止信号，SDA上升沿触发*/
  60          void I2C_stop()
  61          {
  62   1        SDA=0;
  63   1        delay_us_hard();
  64   1        SCL=1;
  65   1        delay_us_hard();
  66   1        SDA=1;
  67   1        delay_us_hard();
  68   1      }
  69          
  70          /*应答信号，SDA触发上升沿，再触发下降沿*/
  71          void I2C_respond()
  72          {
  73   1        uchar i;
  74   1        SCL=1;
  75   1        delay_us_hard();
  76   1        while(SDA==1&&i<250)i++;//等待低电平来，或者一直等待,等待一定次数若无应答则退出
  77   1        SCL=0;
  78   1        delay_us_hard();
  79   1      }
  80          
  81          /*初始化,SDA=1,SCL=1*/
  82          void I2C_init()
  83          {
  84   1        SDA=1;
  85   1        delay_us_hard();
  86   1        SCL=1;
  87   1        delay_us_hard();
  88   1      }
  89          
  90          /*写一个字节*/
  91          void I2C_write_byte(uchar data_val)
  92          {
  93   1        uchar i,temp;
  94   1        temp=data_val;
  95   1        for(i=0;i<8;i++)
  96   1        {
  97   2          temp=temp<<1;//数据左移一位，最高位移入CY寄存器
  98   2          SCL=0;
  99   2          delay_us_hard();
 100   2          SDA=CY;//将CY寄存器的内容传给数据总线
 101   2          delay_us_hard();
 102   2          SCL=1;//SCL拉高，启动写数据
 103   2          delay_us_hard();
 104   2        }
 105   1        /*回归原始状态*/
 106   1        SCL=0;
 107   1        delay_us_hard();
 108   1        SDA=1;
 109   1        delay_us_hard();
 110   1      }
 111          
 112          /*读一个字节*/
 113          uchar I2C_read_byte()
C51 COMPILER V9.54   99__________                                                          01/18/2020 10:00:48 PAGE 3   

 114          {
 115   1        uchar i,j;
 116   1        SCL=0;//先把时钟拉低
 117   1        delay_us_hard();
 118   1        SDA=1;//把数据拉高
 119   1        delay_us_hard();
 120   1        for(i=0;i<8;i++)
 121   1        {
 122   2          SCL=1;//再把时钟拉高，启动读“位”
 123   2          delay_us_hard();
 124   2          j=(j<<1)|SDA;//j左移一位与SDA进行或运算，依次将8个独立的位赋给j来完成接收
 125   2          SCL=0;//最后把时钟拉低，停止读“位”
 126   2          delay_us_hard();
 127   2        }
 128   1        return j;
 129   1      }
 130          
 131          /*写数据*/
 132          void I2C_write_data(uchar address,uchar data_val)
 133          {
 134   1        I2C_start();
 135   1        I2C_write_byte(0xa0);//写含片选信号的控制字,进行写操作
 136   1        I2C_respond();
 137   1        I2C_write_byte(address);//写芯片内的储存器单元子地址
 138   1        I2C_respond();
 139   1        I2C_write_byte(data_val);
 140   1        I2C_respond();
 141   1        I2C_stop();
 142   1      }
 143          
 144          /*读数据*/
 145          uchar I2C_read_data(uchar address)
 146          {
 147   1        uchar temp;
 148   1        I2C_start();
 149   1        I2C_write_byte(0xa0);//写含片选信号的控制字，进行写操作
 150   1        I2C_respond();
 151   1        I2C_write_byte(address);//写芯片内的存储器单元子地址
 152   1        I2C_respond();
 153   1        I2C_start();
 154   1        I2C_write_byte(0xa1);//写含片选信号的控制字，进行读操作
 155   1        I2C_respond();
 156   1        temp=I2C_read_byte();
 157   1        I2C_stop();
 158   1        
 159   1        return temp;
 160   1      }
 161          
 162          /*显示数码管后两位*/
 163          void display(uchar ge,uchar shi)
 164          {
 165   1        /*显示个位*/
 166   1        wela=1;
 167   1        P0=0xef;
 168   1        wela=0;
 169   1        dula=1;
 170   1        P0=table[ge];
 171   1        dula=0;
 172   1        delay_ms_soft(5);
 173   1        
 174   1        /*显示十位*/
 175   1        wela=1;
C51 COMPILER V9.54   99__________                                                          01/18/2020 10:00:48 PAGE 4   

 176   1        P0=0xdf;
 177   1        wela=0;
 178   1        dula=1;
 179   1        P0=table[shi];
 180   1        dula=0;
 181   1        delay_ms_soft(5);
 182   1      }
 183          
 184          /*主函数*/
 185          void main()
 186          {
 187   1        /*初始化I2C并读取E2PPROM的数据*/
 188   1        I2C_init();
 189   1        second=I2C_read_data(2);
 190   1        if(second>100)//如果乱码，则将second置零
 191   1        {
 192   2          second=0;
 193   2        }
 194   1        
 195   1        /*开启时钟0进行计时中断*/
 196   1        TMOD=0x01;//时钟0，工作方式1
 197   1        TH0=(65536-50000)/256;//0.05ms一次
 198   1        TL0=(65536-50000)%256;
 199   1        TR0=1;
 200   1        EA=1;
 201   1        ET0=1;
 202   1        
 203   1        /*反复更新显示数码管,到1s时便把秒数写进E2PPROM*/
 204   1        while(1)
 205   1        {
 206   2          display(second/10,second%10);
 207   2        
 208   2          if(write==1)//到1s
 209   2          {
 210   3            write=0;
 211   3            I2C_write_data(2,second);
 212   3          }
 213   2        }
 214   1      }
 215          
 216          /*定时器0中断服务函数*/
 217          void T0_time() interrupt 1
 218          {
 219   1        TH0=(65536-50000)/256;
 220   1        TL0=(65536-50000)%256;
 221   1        count++;
 222   1        if(count==20)//到1s
 223   1        {
 224   2          count=0;
 225   2          write=1;//1s写入E2PPROM
 226   2          second++;//秒数增1
 227   2          if(second==100)//定时100s，再从零开始计时
 228   2          {
 229   3            second=0;
 230   3          }
 231   2        }
 232   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    373    ----
   CONSTANT SIZE    =     16    ----
C51 COMPILER V9.54   99__________                                                          01/18/2020 10:00:48 PAGE 5   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
