C51 COMPILER V9.54   ____________                                                          01/14/2020 18:59:15 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE ____________
OBJECT MODULE PLACED IN .\Objects\液晶动态显示.obj
COMPILER INVOKED BY: E:\Learning_syy\C51&STM32\Keil5\C51\BIN\C51.EXE 液晶动态显示.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJEC
                    -TEXTEND PRINT(.\Listings\液晶动态显示.lst) TABS(2) OBJECT(.\Objects\液晶动态显示.obj)

line level    source

   1          /*
   2          **********************************************************************************************************
             -*************************************
   3          *
   4          *   模块名称 ： 液晶模块1602
   5          *   文件名称 ： 液晶动态显示.c
   6          *   版本     ： v1.0
   7          *   说明     ： 实现在1602液晶，从第一行右侧移入"I LOVE WZH,GET!"，同时在第二行右侧移入"WWW.SYY.COM"
   8          *   修改记录 ：
   9          *       版本号  日期        作者      说明
  10          *       v1.0    2020-01-14  Yang      v1.0版本进行测试
  11          *       
  12          *
  13          **********************************************************************************************************
             -*************************************
  14          */
  15          
  16          #include <reg52.h>
  17          #define uchar unsigned char
  18          #define uint unsigned int
  19            
  20          sbit LCD_EN=P3^4;
  21          sbit LCD_RS=P3^5;
  22          sbit dula=P2^6;
  23          sbit wela=P2^7;
  24          
  25          uchar code str1[]="I LOVE WZH!";
  26          uchar code str2[]="WWW.SYY.COM";
  27          uchar count;
  28          
  29          /*延时函数，延时n毫秒*/
  30          void delay_ms(uint n)
  31          {
  32   1        uint i,j;
  33   1        for(i=n;i>0;i--)
  34   1          for(j=110;j>0;j--);
  35   1      }
  36          
  37          /*写命令函数*/
  38          void LCD_write_cmd(uchar cmd_val)
  39          {
  40   1        LCD_RS=0;//选择写命令
  41   1        P0=cmd_val;//将要写的命令字送到数据总线上
  42   1        delay_ms(5);//稍作延时以待数据稳定
  43   1        LCD_EN=1;//使能端给一高脉冲，因为初始化函数已经将LCD_EN=0
  44   1        delay_ms(5);//稍作延时
  45   1        LCD_EN=0;//将使能端置零，完成高脉冲
  46   1      }
  47          
  48          /*写数据函数*/
  49          void LCD_write_data(uchar data_val)
  50          {
  51   1        LCD_RS=1;//选择写数据
  52   1        P0=data_val;//将要写的数据送到数据总线上
C51 COMPILER V9.54   ____________                                                          01/14/2020 18:59:15 PAGE 2   

  53   1        delay_ms(5);//稍作延时以待数据稳定
  54   1        LCD_EN=1;//使能端给一高脉冲，因为初始化函数已经将LCD_EN=0
  55   1        delay_ms(5);//稍作延时
  56   1        LCD_EN=0;//将使能端置零，完成高脉冲
  57   1      }
  58          
  59          /*初始化LCD*/
  60          void Init()
  61          {
  62   1        dula=0;
  63   1        wela=0;//关闭段选、位选
  64   1        LCD_EN=0;//先关闭液晶使能端
  65   1        LCD_write_cmd(0x38);//设置16 X 2显示，5 X 7点阵，8位数据接口
  66   1        LCD_write_cmd(0x0c);//开显示，不显示光标，不闪烁
  67   1        LCD_write_cmd(0x06);//写一个字符后指针加1
  68   1        LCD_write_cmd(0x01);//显示清0，数据指针清0
  69   1      }
  70          
  71          void main()
  72          {
  73   1        /*初始化LCD*/
  74   1        Init();
  75   1        
  76   1        /*先写第一行的数据指针，再写入第一行数据*/
  77   1        LCD_write_cmd(0x80+0x10);//将数据写入非显示区域地址处
  78   1        
  79   1        for(count=0;count<15;count--)
  80   1        {
  81   2          LCD_write_data(str1[count]);
  82   2          delay_ms(5);
  83   2        }
  84   1        
  85   1        /*先写第二行的数据指针，再写入第二行数据*/
  86   1        LCD_write_cmd(0x80+0x50);
  87   1        
  88   1        for(count=0;count<11;count--)
  89   1        {
  90   2          LCD_write_data(str2[count]);
  91   2          delay_ms(5);
  92   2        }
  93   1        
  94   1        for(count=0;count<15;count++)
  95   1        {
  96   2          LCD_write_cmd(0x18);//将屏幕左移，将数据移入要显示的区域
  97   2          delay_ms(200);//间隔200ms左移一个地址
  98   2        }
  99   1        while(1);
 100   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    180    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
