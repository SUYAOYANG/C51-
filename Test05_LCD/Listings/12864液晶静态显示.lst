C51 COMPILER V9.54   12864____________                                                     01/15/2020 12:18:42 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE 12864____________
OBJECT MODULE PLACED IN .\Objects\12864液晶静态显示.obj
COMPILER INVOKED BY: E:\Learning_syy\C51&STM32\Keil5\C51\BIN\C51.EXE 12864液晶静态显示.c OPTIMIZE(8,SPEED) BROWSE DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\12864液晶静态显示.lst) TABS(2) OBJECT(.\Objects\12864液晶静态显示.obj)

line level    source

   1          /*
   2          **********************************************************************************************************
             -*************************************
   3          *
   4          *   模块名称 ： 液晶模块12864
   5          *   文件名称 ： 12864液晶静态显示.c
   6          *   版本     ： v1.0
   7          *   说明     ： 并行操作方式，实现在12864液晶的第一行显示“0123456789”，并且让每一位数字随机变化，
   8          *               第二行显示“我爱傻猪!”,第三行显示“www.syy.com”,第四行对应第三行显示出下划线
   9          *   修改记录 ：
  10          *       版本号    日期        作者      说明
  11          *       v1.0    2020-01-15  Yang      v1.0版本进行测试
  12          *       
  13          *
  14          **********************************************************************************************************
             -*************************************
  15          */
  16          
  17          #include <reg52.h>
  18          #include <stdlib.h>
  19          #include <intrins.h>
  20          #define uchar unsigned char
  21          #define uint unsigned int
  22          
  23          /*端口定义*/
  24          #define LCD_data=P0;//数据口
  25          sbit LCD_EN=P3^4;//液晶使能控制
  26          sbit LCD_RS=P3^5;//寄存器选择输入，0为输入指令，1为输入显示数据
  27          sbit LCD_RW=P3^6;//液晶读/写控制
  28          sbit LCD_PSB=P3^7;//串/并行方式控制
  29          
  30          uchar str1[10];
  31          uchar code str2[]="我爱傻猪！";
  32          uchar code str3[]={"www.syy.com"};
  33          uchar code str4[]={"------------"};
  34          
  35          /*延时函数，延时n毫秒*/
  36          void delay_ms(uint n)
  37          {
  38   1        uint i,j;
  39   1        for(i=n;i>0;i--)
  40   1          for(j=110;j>0;j--);
  41   1      }
  42          
  43          /*发送指令数据到LCD*/
  44          /*LCD_RS=L,LCD_RW=L,LCD_EN=高脉冲，D0-D7=指令码*/
  45          void LCD_write_cmd(uchar cmd_val)
  46          {
  47   1        LCD_RS=0;
  48   1        LCD_RW=0;
  49   1        LCD_EN=0;
  50   1        P0=cmd_val;//将指令数据送到数据总线
  51   1        delay_ms(5);
  52   1        LCD_EN=1;
C51 COMPILER V9.54   12864____________                                                     01/15/2020 12:18:42 PAGE 2   

  53   1        delay_ms(5);
  54   1        LCD_EN=0;
  55   1      }
  56          
  57          /*发送显示数据到LCD*/
  58          /*LCD_RS=H,LCD_RW=L,LCD_EN=高脉冲，D0-D7=指令码*/
  59          void LCD_write_data(uchar data_val)
  60          {
  61   1        LCD_RS=1;
  62   1        LCD_RW=0;
  63   1        LCD_EN=0;
  64   1        P0=data_val;//将指令数据送到数据总线
  65   1        delay_ms(5);
  66   1        LCD_EN=1;
  67   1        delay_ms(5);
  68   1        LCD_EN=0;
  69   1      }
  70          
  71          /*确定显示坐标*/
  72          void LCD_SetPos(uchar x,uchar y)
  73          {
  74   1        uchar pos;
  75   1        if(x==0)
  76   1          x=0x80;
  77   1        else if(x==1)
  78   1          x=0x90;
  79   1        else if(x==2)
  80   1          x=0x88;
  81   1        else if(x==3)
  82   1          x=0x98;
  83   1        pos=x+y;
  84   1        
  85   1        LCD_write_cmd(pos);
  86   1      }
  87          
  88          /*生成随机数字*/
  89          void LCD_MakeRand()
  90          {
  91   1        uchar num;
  92   1        num=rand();
  93   1        /*生成高五位*/
  94   1        str1[0]=num/10000+0x30;
  95   1        str1[1]=num%10000/1000+0x30;
  96   1        str1[2]=num%1000/100+0x30;
  97   1        str1[3]=num%100/10+0x30;
  98   1        str1[4]=num%10+0x30;
  99   1        
 100   1        num=rand();
 101   1        /*生成低五位*/
 102   1        str1[5]=num/10000+0x30;
 103   1        str1[6]=num%10000/1000+0x30;
 104   1        str1[7]=num%1000/100+0x30;
 105   1        str1[8]=num%100/10+0x30;
 106   1        str1[9]=num%10+0x30;
 107   1      }
 108          
 109          /*初始化液晶参数*/
 110          void LCD_Init()
 111          {
 112   1        LCD_PSB=1;
 113   1        LCD_write_cmd(0x30);
 114   1        delay_ms(5);
C51 COMPILER V9.54   12864____________                                                     01/15/2020 12:18:42 PAGE 3   

 115   1        LCD_write_cmd(0x0c);
 116   1        delay_ms(5);
 117   1        LCD_write_cmd(0x01);
 118   1        delay_ms(5);
 119   1      }
 120          
 121          /*主程序*/
 122          void main()
 123          {
 124   1        uchar i;
 125   1        delay_ms(5);
 126   1        LCD_Init();
 127   1        
 128   1        /*设置显示位置为第二行的第1个字符*/
 129   1        LCD_SetPos(1,0);
 130   1        i=0;
 131   1        while(str2[i]!='\0')
 132   1        {
 133   2          LCD_write_data(str2[i]);//显示字符
 134   2          i++;
 135   2        }
 136   1        
 137   1        /*设置显示位置为第三行的第1个字符*/
 138   1        LCD_SetPos(2,0);
 139   1        i=0;
 140   1        while(str3[i]!='\0')
 141   1        {
 142   2          LCD_write_data(str3[i]);//显示字符
 143   2          i++;
 144   2        }
 145   1        
 146   1        /*设置显示位置为第四行的第1个字符*/
 147   1        LCD_SetPos(3,0);
 148   1        i=0;
 149   1        while(str4[i]!='\0')
 150   1        {
 151   2          LCD_write_data(str4[i]);//显示字符
 152   2          i++;
 153   2        }
 154   1        
 155   1        /*设置显示位置为第一行的第1个字符*/
 156   1        while(1)
 157   1        {
 158   2          LCD_SetPos(0,0);
 159   2          i=0;
 160   2          LCD_MakeRand();
 161   2          for(i=0;i<10;i++)
 162   2          {
 163   3            LCD_write_data(str1[i]);
 164   3          }
 165   2        }
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    437    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.54   12864____________                                                     01/15/2020 12:18:42 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
